""" –î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ - –±–æ—Ç –¥–ª—è telegram –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á—É –Ω–∞–±—Ä–∞–Ω–Ω—É—é —Å –∫–æ–Ω—Å–æ–ª–∏ –Ω–∞ –¥–∞—Ç—É "—Å–µ–≥–æ–¥–Ω—è", "–∑–∞–≤—Ç—Ä–∞"
–∏ "–æ—Å—Ç–∞–ª—å–Ω–æ–µ". –¢–∞–∫ –∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–∞—á—É –Ω–∞ –¥–∞—Ç—É "—Å–µ–≥–æ–¥–Ω—è". –¢–∞–∫ –∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–≤–æ–¥–∞
–∑–∞–¥–∞—á –ø–æ –ª—é–±–æ–π –∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–∞—Ç.
-----------------------------------------------------------

(C) 2022 Sergey Matofonov, Russia, Sevastopol
Released under GNU Public License (GPL)
email: phaeton.kz@gmail.com
-----------------------------------------------------------
"""
import telebot
from telebot import types
import random

token = ''  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = telebot.TeleBot(token)

HELP = """
HELP - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
ADD - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è).
RANDOM - –¥–æ–±–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–∞—á—É –Ω–∞ –¥–∞—Ç—É "–°–µ–≥–æ–¥–Ω—è".
SHOW - –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.
"""
# –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∫–∞–∑ –∑–∞–¥–∞—á
mode = ''
# –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–¥–∞—á
RANDOM_TASK = ['–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å –≤ –ù–µ—Ç–æ–ª–æ–≥–∏—é.', '–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –ì–≤–∏–¥–æ.', '–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—à–∫—É.', '–ü–æ–º—ã—Ç—å –º–∞—à–∏–Ω—É.']

# –ü—É—Å—Ç–æ–π —Å–ª–æ–∞–≤—Ä—å –∫—É–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∞—Ç—ã –≤ –≤–∏–¥–µ –∫–ª—é—á–µ–π –∏ –∑–∞–¥–∞—á–∏ –≤ –≤–∏–¥–µ –∑–Ω–∞—á–µ–Ω–∏–π
tasks = {}


def add_todo(date, task):
    """–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á—É –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞—Ç–µ"""
    if date in tasks:
        tasks[date].append(task)
    else:
        tasks[date] = [task]


@bot.message_handler(commands=['start'])
def start(message, greeting=True):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_help = types.KeyboardButton('‚ùì HELP')
    btn_add = types.KeyboardButton('‚úî ADD')
    btn_random = types.KeyboardButton('‚ûï RANDOM')
    btn_show = types.KeyboardButton('üëÄ SHOW')
    markup.add(btn_add, btn_random, btn_show, btn_help)
    if greeting:  # greeting - —Ñ–ª–∞–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ø–µ—Ä–≤—ã–µ, -  –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è
        bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á. –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É '
                                               '–∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–û–ú–û–©–¨, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥'
                         .format(message.from_user), reply_markup=markup)
    else:
        bot.send_message(message.chat.id,
                         text='{0.first_name}! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–û–ú–û–©–¨, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è'
                              ' —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥'
                         .format(message.from_user), reply_markup=markup)


# @bot.message_handler(content_types=['text'])
def second_menu(message):
    # –í—ã–≤–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –º–µ–Ω—é —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∞—Ç—ã –¥–ª—è –∑–∞–¥–∞—á–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è')
    btn2 = types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞')
    btn3 = types.KeyboardButton('–û—Å—Ç–∞–ª—å–Ω–æ–µ')
    back = types.KeyboardButton('–ù–ê–ó–ê–î')
    markup.add(btn1, btn2, btn3)
    markup.add(back)
    bot.send_message(message.chat.id, text='–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å?', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
    global mode
    if message.text == '‚ùì HELP':
        bot.send_message(message.chat.id, HELP)
    elif message.text == '‚ûï RANDOM':
        random_add(message)
    elif message.text == 'üëÄ SHOW':
        mode = 'show'
        second_menu(message)
    elif message.text == '‚úî ADD':
        mode = 'add'
        second_menu(message)
    elif (message.text == '–°–µ–≥–æ–¥–Ω—è') and (mode == 'add'):
        command_add(message)
    elif (message.text == '–°–µ–≥–æ–¥–Ω—è') and (mode == 'show'):
        day_of_list = '—Å–µ–≥–æ–¥–Ω—è'
        show(message, day_of_list)
    elif (message.text == '–ó–∞–≤—Ç—Ä–∞') and (mode == 'add'):
        command_add(message)
    elif (message.text == '–ó–∞–≤—Ç—Ä–∞') and (mode == 'show'):
        day_of_list = '–∑–∞–≤—Ç—Ä–∞'
        show(message, day_of_list)
    elif (message.text == '–û—Å—Ç–∞–ª—å–Ω–æ–µ') and (mode == 'add'):
        command_add(message)
    elif (message.text == '–û—Å—Ç–∞–ª—å–Ω–æ–µ') and (mode == 'show'):
        day_of_list = '–æ—Å—Ç–∞–ª—å–Ω–æ–µ'
        show(message, day_of_list)
    elif message.text == '–ù–ê–ó–ê–î':
        bot.send_message(message.chat.id, text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.')
        greeting = False  # –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ False, —á—Ç–æ–±—ã –Ω–µ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –µ—â–µ —Ä–∞–∑ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
        start(message, greeting)


def command_add(message):
    # –í—ã–±–∏—Ä–∞–µ–º –¥–∞—Ç—É
    day = message.text.lower()
    msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –Ω–∞ –¥–µ–Ω—å {day}: ')
    bot.register_next_step_handler(msg, command_add_task, day)


def command_add_task(message, date):
    #  –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –∏ —Å—Ä–∞–∑—É –∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –º–µ–Ω–µ–µ 3—Ö —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ –∑–∞–¥–∞—á—É –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º
    if len(message.text) >= 3:
        add_todo( date, message.text)
        text = '–ó–∞–¥–∞—á–∞ ' + message.text + ' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–∞—Ç—É ' + date
    else:
        bot.send_message(message.chat.id, text='–ó–∞–¥–∞—á–∞ –º–µ–Ω–µ–µ 3-—Ö —Å–∏–º–≤–æ–ª–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥')
        return
    bot.send_message(message.chat.id, text)


def random_add(message):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞ –¥–∞—Ç—É "–°–µ–≥–æ–¥–Ω—è"
    date = '—Å–µ–≥–æ–¥–Ω—è'
    task = random.choice(RANDOM_TASK)
    add_todo(date, task)
    text = '–ó–∞–¥–∞—á–∞ ' + task + ' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–∞—Ç—É ' + date
    bot.send_message(message.chat.id, text)


def show(message, date):
    # –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–¥–∞—á –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
    if date in tasks:
        text = date.upper() + '\n'
        for task in tasks[date]:
            text = text + '[] ' + task + '\n'
    else:
        text = '–ó–∞–¥–∞—á –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç'
    bot.send_message(message.chat.id, text)


if __name__ == '__main__':  # –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    bot.polling(none_stop=True)
